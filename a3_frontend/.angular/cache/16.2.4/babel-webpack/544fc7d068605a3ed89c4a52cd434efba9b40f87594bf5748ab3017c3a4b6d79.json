{"ast":null,"code":"import { catchError, interval } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/flex-layout/flex\";\nimport * as i4 from \"@angular/material/core\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/list\";\nfunction AppComponent_mat_list_item_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r3.labels[item_r2.key], \": \", item_r2.value, \"\");\n  }\n}\nfunction AppComponent_mat_list_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵtemplate(1, AppComponent_mat_list_item_10_p_1_Template, 2, 2, \"p\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.labels[item_r2.key]);\n  }\n}\nfunction AppComponent_mat_list_item_19_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r6.labels[item_r5.key], \": \", item_r5.value, \"\");\n  }\n}\nfunction AppComponent_mat_list_item_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\");\n    i0.ɵɵtemplate(1, AppComponent_mat_list_item_19_p_1_Template, 2, 2, \"p\", 4);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.labels[item_r5.key]);\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(httpClient, changeDetectorRef) {\n      this.httpClient = httpClient;\n      this.changeDetectorRef = changeDetectorRef;\n      this.mqttEndpoint = 'http://localhost:3000/api/v1/sensors/air-quality/latestData/mqtt';\n      this.core2Endpoint = 'http://localhost:3000/api/v1/sensors/air-quality/latestData/core2';\n      this.latestMqttData = {};\n      this.latestCore2Data = {};\n      this.errorMqtt = false;\n      this.errorCore2 = false;\n      this.labels = {\n        'tvoc': 'TVOC: ',\n        'tvoc_avg': 'TVOC average: ',\n        'tvoc_min': 'TVOC min: ',\n        'tvoc_max': 'TVOC max: ',\n        'eco2': 'eCO2: ',\n        'eco2_min': 'eCO2 min: ',\n        'eco2_max': 'eCO2 max: ',\n        'eco2_avg': 'eCO2 average: '\n      };\n    }\n    ngOnInit() {\n      this.listenForChanges();\n    }\n    listenForChanges() {\n      interval(1000).subscribe(_ => {\n        this.httpClient.get(this.mqttEndpoint).pipe(catchError(err => {\n          this.errorMqtt = true;\n          throw err;\n        })).subscribe(resp => {\n          if (resp.status == 200) {\n            this.errorMqtt = false;\n            this.latestMqttData = resp.body;\n            this.changeDetectorRef.markForCheck();\n            console.log(this.latestMqttData);\n          } else {\n            this.errorMqtt = true;\n          }\n        });\n        this.httpClient.get(this.core2Endpoint).pipe(catchError(err => {\n          this.errorCore2 = true;\n          throw err;\n        })).subscribe(resp => {\n          if (resp.status == 200) {\n            this.errorCore2 = false;\n            this.latestCore2Data = resp.body;\n          } else {\n            this.errorCore2 = true;\n          }\n        });\n      });\n    }\n    static #_ = this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 21,\n      vars: 8,\n      consts: [[\"fxLayout\", \"row\", \"fxLayout.xs\", \"column\", \"fxLayoutAlign\", \"start start\", \"fxLayoutGap\", \"16px\"], [\"fxFlex\", \"50%\", \"fxFlex.xs\", \"100%\"], [1, \"scrollable-list\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-line\", \"\", 4, \"ngIf\"], [\"mat-line\", \"\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Daring Do awesome IoT measuring data displaying tool!!!!!!\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"mat-card\")(5, \"mat-card-content\")(6, \"h3\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"mat-list\");\n          i0.ɵɵtemplate(10, AppComponent_mat_list_item_10_Template, 2, 1, \"mat-list-item\", 3);\n          i0.ɵɵpipe(11, \"keyvalue\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(12, \"div\", 1)(13, \"mat-card\")(14, \"mat-card-content\")(15, \"h3\");\n          i0.ɵɵtext(16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"div\", 2)(18, \"mat-list\");\n          i0.ɵɵtemplate(19, AppComponent_mat_list_item_19_Template, 2, 1, \"mat-list-item\", 3);\n          i0.ɵɵpipe(20, \"keyvalue\");\n          i0.ɵɵelementEnd()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate1(\"Latest values from MQTT broker. Data from: \", ctx.latestMqttData[\"timestamp\"], \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(11, 4, ctx.latestMqttData));\n          i0.ɵɵadvance(6);\n          i0.ɵɵtextInterpolate1(\"Latest values from core2 device via POST request. Data from: \", ctx.latestCore2Data[\"timestamp\"], \"\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(20, 6, ctx.latestCore2Data));\n        }\n      },\n      dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultLayoutDirective, i3.DefaultLayoutGapDirective, i3.DefaultLayoutAlignDirective, i3.DefaultFlexDirective, i4.MatLine, i5.MatCard, i5.MatCardContent, i6.MatList, i6.MatListItem, i2.KeyValuePipe],\n      styles: [\".scrollable-list[_ngcontent-%COMP%]{max-height:500px;overflow-y:auto}\"],\n      changeDetection: 0\n    });\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}