{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/grid-list\";\nimport * as i3 from \"@angular/material/core\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/material/list\";\nfunction AppComponent_mat_list_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\")(1, \"h4\", 6);\n    i0.ɵɵtext(2, \"Numerical Value:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const value_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(value_r1);\n  }\n}\nexport class AppComponent {\n  constructor() {\n    this.numericalValues = [];\n  }\n  ngOnInit() {\n    // Simulated data update every second\n    setInterval(() => {\n      this.numericalValues = this.generateRandomValues();\n    }, 1000);\n  }\n  generateRandomValues() {\n    // Generate 8 random numerical values for demonstration\n    return Array.from({\n      length: 8\n    }, () => Math.floor(Math.random() * 100));\n  }\n  static #_ = this.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 14,\n    vars: 1,\n    consts: [[\"cols\", \"2\", \"rowHeight\", \"1:1\"], [\"colspan\", \"1\", \"rowspan\", \"1\"], [1, \"left-grid-content\"], [1, \"scrollable-data\"], [4, \"ngFor\", \"ngForOf\"], [1, \"right-grid-content\"], [\"mat-line\", \"\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-grid-list\", 0)(1, \"mat-grid-tile\", 1)(2, \"div\", 2)(3, \"h3\");\n        i0.ɵɵtext(4, \"Timestamp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"mat-card\")(7, \"mat-card-content\")(8, \"mat-list\");\n        i0.ɵɵtemplate(9, AppComponent_mat_list_item_9_Template, 5, 1, \"mat-list-item\", 4);\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(10, \"mat-grid-tile\", 1)(11, \"div\", 5)(12, \"h3\");\n        i0.ɵɵtext(13, \"Title\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.numericalValues);\n      }\n    },\n    dependencies: [i1.NgForOf, i2.MatGridList, i2.MatGridTile, i3.MatLine, i4.MatCard, i4.MatCardContent, i5.MatList, i5.MatListItem],\n    styles: [\".left-grid-content[_ngcontent-%COMP%] {\\n  background-color: #e0e0e0; \\n\\n  padding: 20px; \\n\\n  height: 100%; \\n\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n\\n.scrollable-data[_ngcontent-%COMP%] {\\n  overflow-y: auto; \\n\\n  max-height: 300px; \\n\\n}\\n\\n\\n\\n.right-grid-content[_ngcontent-%COMP%] {\\n  background-color: #f0f0f0; \\n\\n  padding: 20px; \\n\\n  height: 100%; \\n\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUEsRUFBQSwrQ0FBQTtFQUNBLGFBQUEsRUFBQSxpQ0FBQTtFQUNBLFlBQUEsRUFBQSxnREFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQSxFQUFBLDhCQUFBO0VBQ0EsaUJBQUEsRUFBQSxvQ0FBQTtBQUNGOztBQUVBLDhCQUFBO0FBQ0E7RUFDRSx5QkFBQSxFQUFBLGdEQUFBO0VBQ0EsYUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQSxFQUFBLGdEQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsbUJBQUE7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIi5sZWZ0LWdyaWQtY29udGVudCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2UwZTBlMDsgLyogQmFja2dyb3VuZCBjb2xvciBmb3IgdGhlIGxlZnQgZ3JpZCBlbGVtZW50ICovXHJcbiAgcGFkZGluZzogMjBweDsgLyogQWRqdXN0IHRoZSBwYWRkaW5nIGFzIG5lZWRlZCAqL1xyXG4gIGhlaWdodDogMTAwJTsgLyogRW5zdXJlIHRoZSBjb250ZW50IHRha2VzIHVwIHRoZSBmdWxsIGhlaWdodCAqL1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uc2Nyb2xsYWJsZS1kYXRhIHtcclxuICBvdmVyZmxvdy15OiBhdXRvOyAvKiBFbmFibGUgdmVydGljYWwgc2Nyb2xsaW5nICovXHJcbiAgbWF4LWhlaWdodDogMzAwcHg7IC8qIEFkanVzdCB0aGUgbWF4LWhlaWdodCBhcyBuZWVkZWQgKi9cclxufVxyXG5cclxuLyogUmlnaHQgR3JpZCBDb250ZW50IFN0eWxlcyAqL1xyXG4ucmlnaHQtZ3JpZC1jb250ZW50IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjBmMGYwOyAvKiBCYWNrZ3JvdW5kIGNvbG9yIGZvciB0aGUgcmlnaHQgZ3JpZCBlbGVtZW50ICovXHJcbiAgcGFkZGluZzogMjBweDsgLyogQWRqdXN0IHRoZSBwYWRkaW5nIGFzIG5lZWRlZCAqL1xyXG4gIGhlaWdodDogMTAwJTsgLyogRW5zdXJlIHRoZSBjb250ZW50IHRha2VzIHVwIHRoZSBmdWxsIGhlaWdodCAqL1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","value_r1","AppComponent","constructor","numericalValues","ngOnInit","setInterval","generateRandomValues","Array","from","length","Math","floor","random","_","_2","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_mat_list_item_9_Template","ɵɵproperty"],"sources":["C:\\Users\\annag\\OneDrive\\Pulpit\\a3_backend\\a3_frontend\\src\\app\\app.component.ts","C:\\Users\\annag\\OneDrive\\Pulpit\\a3_backend\\a3_frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  numericalValues: number[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    // Simulated data update every second\n    setInterval(() => {\n      this.numericalValues = this.generateRandomValues();\n    }, 1000);\n  }\n\n  private generateRandomValues(): number[] {\n    // Generate 8 random numerical values for demonstration\n    return Array.from({ length: 8 }, () => Math.floor(Math.random() * 100));\n  }\n}\n","<mat-grid-list cols=\"2\" rowHeight=\"1:1\">\n  <!-- Left Grid Element -->\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <div class=\"left-grid-content\">\n      <h3>Timestamp</h3>\n      <div class=\"scrollable-data\">\n        <!-- Use Angular Material components for data display -->\n        <mat-card>\n          <mat-card-content>\n            <!-- Display numerical values in a mat-list -->\n            <mat-list>\n              <mat-list-item *ngFor=\"let value of numericalValues\">\n                <h4 mat-line>Numerical Value:</h4>\n                <p mat-line>{{ value }}</p>\n              </mat-list-item>\n            </mat-list>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </mat-grid-tile>\n\n  <!-- Right Grid Element -->\n  <mat-grid-tile colspan=\"1\" rowspan=\"1\">\n    <div class=\"right-grid-content\">\n      <h3>Title</h3>\n      <!-- Add content for the right grid here -->\n    </div>\n  </mat-grid-tile>\n</mat-grid-list>\n\n\n\n<!--<mat-grid-list cols=\"2\" rowHeight=\"1:1\">-->\n<!--  &lt;!&ndash; Left Grid Element &ndash;&gt;-->\n<!--  <mat-grid-tile colspan=\"1\" rowspan=\"1\">-->\n<!--    <div class=\"left-grid-content\">-->\n<!--      <h3>Timestamp</h3>-->\n<!--      <div class=\"scrollable-data\">-->\n<!--        &lt;!&ndash; Add your data here &ndash;&gt;-->\n<!--        <div *ngFor=\"let value of numericalValues\">{{ value }}</div>-->\n<!--      </div>-->\n<!--    </div>-->\n<!--  </mat-grid-tile>-->\n\n<!--  &lt;!&ndash; Right Grid Element &ndash;&gt;-->\n<!--  <mat-grid-tile colspan=\"1\" rowspan=\"1\">-->\n<!--    <div class=\"right-grid-content\">-->\n<!--      <h3>Title</h3>-->\n<!--      &lt;!&ndash; Add content for the right grid here &ndash;&gt;-->\n<!--    </div>-->\n<!--  </mat-grid-tile>-->\n<!--</mat-grid-list>-->\n"],"mappings":";;;;;;;;ICWcA,EAAA,CAAAC,cAAA,oBAAqD;IACtCD,EAAA,CAAAE,MAAA,uBAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAClCH,EAAA,CAAAC,cAAA,WAAY;IAAAD,EAAA,CAAAE,MAAA,GAAW;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAfH,EAAA,CAAAI,SAAA,GAAW;IAAXJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAW;;;ADNvC,OAAM,MAAOC,YAAY;EAGvBC,YAAA;IAFA,KAAAC,eAAe,GAAa,EAAE;EAEd;EAEhBC,QAAQA,CAAA;IACN;IACAC,WAAW,CAAC,MAAK;MACf,IAAI,CAACF,eAAe,GAAG,IAAI,CAACG,oBAAoB,EAAE;IACpD,CAAC,EAAE,IAAI,CAAC;EACV;EAEQA,oBAAoBA,CAAA;IAC1B;IACA,OAAOC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAC,CAAE,EAAE,MAAMC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;EACzE;EAAC,QAAAC,CAAA,G;qBAfUZ,YAAY;EAAA;EAAA,QAAAa,EAAA,G;UAAZb,YAAY;IAAAc,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCPzB3B,EAAA,CAAAC,cAAA,uBAAwC;QAI9BD,EAAA,CAAAE,MAAA,gBAAS;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClBH,EAAA,CAAAC,cAAA,aAA6B;QAMrBD,EAAA,CAAA6B,UAAA,IAAAC,qCAAA,2BAGgB;QAClB9B,EAAA,CAAAG,YAAA,EAAW;QAQrBH,EAAA,CAAAC,cAAA,wBAAuC;QAE/BD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAK;;;QAd2BH,EAAA,CAAAI,SAAA,GAAkB;QAAlBJ,EAAA,CAAA+B,UAAA,YAAAH,GAAA,CAAAnB,eAAA,CAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}